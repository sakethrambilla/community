import SessionProvider from "@/components/provider/session-provider";
import StateProvider from "@/components/provider/state-provider";
import { ThemeProvider } from "@/components/provider/theme-provider";
import { Toaster } from "@/components/ui/toaster";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
const trap = localFont({
  src: "../public/fonts/Trap-Regular.otf",
  variable: "--font-trap",
});

const nippo = localFont({
  src: "../public/fonts/Nippo-Variable.ttf",
  variable: "--font-nippo",
});

const styrofoam = localFont({
  src: "../public/fonts/Styro-Variable.ttf",
  variable: "--font-styro",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const aktura = localFont({
  src: "../public/fonts/Aktura-Regular.otf",
  variable: "--font-aktura",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${trap.className} ${nippo.variable} ${styrofoam.variable} ${geistSans.variable} ${geistMono.variable} ${aktura.variable} antialiased`}
      >
        <SessionProvider>
          <StateProvider>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              {children}
              <Toaster />
            </ThemeProvider>
          </StateProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
